generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  username     String        @unique @db.VarChar(50)
  password     String        @db.VarChar(255)
  email        String?       @unique @db.VarChar(100)
  fullName     String?       @map("full_name") @db.VarChar(100)
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  phone        String?       @map("phone") @db.VarChar(20)
  avatar       String?       @map("avatar") @db.LongText
  address      String?       @map("address") @db.VarChar(255)
  birthDate    DateTime?     @map("birth_date") @db.Date()
  // Relations
  transactions Transaction[]
  budgets      Budget[]
  wallets      Wallet[]

  @@map("users")
}

model Category {
  id        Int          @id @default(autoincrement())
  name      String
  type      CategoryType
  parentId  Int?         @map("parent_id")
  icon      String?
  isActive  Boolean      @default(true) @map("is_active")
  createdAt DateTime     @default(now()) @map("created_at")

  // Relations
  parent       Category?     @relation("CategoryToSubCategory", fields: [parentId], references: [id], onDelete: Cascade)
  children     Category[]    @relation("CategoryToSubCategory")
  transactions Transaction[]

  @@unique([name])
  @@map("categories")
}

model Transaction {
  id              Int      @id @default(autoincrement())
  userId          Int      @map("user_id")
  categoryId      Int      @map("category_id")
  budgetId        Int?     @map("budget_id") // Thêm trường này
  amount          Decimal  @db.Decimal(15, 2)
  description     String?  @db.Text
  transactionDate DateTime @map("transaction_date")
  createdAt       DateTime @default(now()) @map("created_at")
  walletId        Int      @map("wallet_id")

  // Relations
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  wallet   Wallet   @relation(fields: [walletId], references: [id], onDelete: Cascade)
  budget   Budget?  @relation(fields: [budgetId], references: [id], onDelete: SetNull)

  @@map("transactions")
}

model Budget {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  amount    Decimal  @db.Decimal(15, 2)
  startDate DateTime @map("start_date")
  endDate   DateTime @map("end_date")
  name      String

  // Relations
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]

  @@map("budgets")
}

model Wallet {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  name      String
  balance   Decimal  @default(0) @db.Decimal(15, 2)
  currency  String   @default("VND") @db.VarChar(3)
  createdAt DateTime @default(now()) @map("created_at")

  // Relations
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]

  @@map("wallets")
}

enum CategoryType {
  income
  expense
}
